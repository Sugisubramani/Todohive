/* Task Container */
.task-item {
  height: auto;
  max-width: 900px;
  width: 85%;
  padding: 8px 10px;
  border-radius: 6px;
  margin: 5px auto;
  background: white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  overflow: visible;
}

/* Description */
.task-item-description {
  font-size: 0.8rem;
  color: #555;
  white-space: normal;
  max-height: 48px;
  line-height: 1.4;
  overflow: hidden;
  padding-left: 24px;
  margin-bottom: 5px;
}

.task-item-footer {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 5px;
  padding: 3px 15px;
  border-top: 1px solid #eee;
  min-height: 20px; /* Use min-height to allow growth when needed */
  overflow: visible;
}


.task-item-footer.expanded-footer {
  height: auto;
}

/* Header */
.task-item-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 8px;
}

/* Title */
.task-title {
  flex-grow: 1;
  margin: 0;
  font-size: 1.1rem;
  font-weight: bold;
  color: #333;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: flex;
  align-items: center;
}

/* Title text gets struck through when completed */
.task-item.completed .title-text {
  text-decoration: line-through;
  opacity: 1 !important; /* No fading */
  color: #333 !important;
}

/* Due Date */
.task-due-date {
  font-size: 0.8rem;
  color: #555;
  display: flex;
  align-items: center;
  gap: 4px;
  padding-left: 9px;
}

.task-due-date .icon-date {
  font-size: 0.8rem;
  color: #777;
}

/* Priority */
.task-priority {
  font-size: 0.7rem;
  font-weight: bold;
  padding: 20px;
}

.task-priority.high { 
  color: red;
  padding-left: 9px;
}
.task-priority.medium { 
  color: orange;
  padding-left: 9px;
}
.task-priority.low { 
  color: green;
  padding-left: 9px;
}

/* Attachments */
.task-attachments {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 3px;
  padding-left: 7px;
}

.attachment-item {
  display: flex;
  align-items: center;
  font-size: 0.75rem;
  color: #007bff;
  cursor: pointer;
  padding: 2px 4px;
  border-radius: 3px;
  background: rgba(0, 123, 255, 0.1);
}

/* Action Buttons */
.task-actions {
  display: flex;
  align-items: center;
  gap: 6px;
}

.task-actions .btn-sm {
  font-size: 0.75rem;
  padding: 2px 6px;
}

.task-item.completed .task-actions .btn-primary {
  display: none;
}

.task-item:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
  transform: translateY(-3px);
}

/* Status Label */
.status-label {
  font-size: 0.8rem;
  font-weight: bold;
  padding: 2px 6px;
  border-radius: 4px;
  margin-left: 8px;
}

.status-label.pending {
  color: #B8860B; /* Orangish yellow (DarkGoldenrod) */
  background-color: rgba(184, 134, 11, 0.1);
}

.status-label.completed {
  color: #2E8B57; /* SeaGreen */
  background-color: rgba(46, 139, 87, 0.1);
}

/* Ensure the status label in a completed task remains unstruck */
.task-item.completed .status-label {
  display: inline-block;
  text-decoration: none !important;
  opacity: 1 !important;
  /* For Completed, force green */
  color: #2E8B57 !important;
}

/* Action Buttons: Hide by default, show on hover */
.task-item .action-buttons {
  display: none;
}

.task-item:hover .action-buttons {
  display: block;
}

.complete-toggle {
  -webkit-appearance: none;
  appearance: none;
  width: 19px;
  height: 19px;
  border: 2px solid #ccc; /* Light gray border */
  border-radius: 50%;
  position: relative;
  cursor: pointer;
  outline: none;
  top: 1px;
  transition: border-color 0.2s, background-color 0.2s;
  background-color: #fff;
}

/* When hovering, show a check mark in gray */
.complete-toggle:hover::after {
  content: "\2713";
  font-size: 12px;
  color: #888; /* Gray tick on hover */
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* When checked, update the border and tick to blue */
.complete-toggle:checked {
  border-color: hsl(211, 100%, 50%);
}

.complete-toggle:checked::after {
  content: "\2713";
  font-size: 12px;
  color: hsl(211, 100%, 50%)  ;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}


